// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using small_business_invoice_tracker.DataAccess;

#nullable disable

namespace small_business_invoice_tracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("small_business_invoice_tracker.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerName = "Acme Corp",
                            Description = "Website Development",
                            DueDate = new DateOnly(2025, 10, 22),
                            IssueDate = new DateOnly(2025, 9, 22),
                            Price = 500.00m,
                            Status = 0,
                            Total = 500.00m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerName = "Beta Ltd",
                            Description = "Mobile App Design",
                            DueDate = new DateOnly(2025, 9, 27),
                            IssueDate = new DateOnly(2025, 9, 2),
                            Price = 1200.00m,
                            Status = 0,
                            Total = 1200.00m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerName = "Charlie Industries",
                            Description = "Consulting Services",
                            DueDate = new DateOnly(2025, 10, 17),
                            IssueDate = new DateOnly(2025, 9, 17),
                            Price = 800.00m,
                            Status = 1,
                            Total = 800.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
